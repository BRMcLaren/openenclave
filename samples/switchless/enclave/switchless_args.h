/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_SWITCHLESS_ARGS_H
#define EDGER8R_SWITCHLESS_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
/* There were no user includes. */

/**** User defined types in EDL. ****/
/* There were no user defined types. */

/**** ECALL marshalling structs. ****/
typedef struct _enclave_add_N_switchless_args_t
{
    oe_result_t _result;
    int* m;
    int n;
} enclave_add_N_switchless_args_t;

typedef struct _enclave_add_N_regular_args_t
{
    oe_result_t _result;
    int* m;
    int n;
} enclave_add_N_regular_args_t;

/**** OCALL marshalling structs. ****/
typedef struct _host_increment_switchless_args_t
{
    oe_result_t _result;
    int* m;
} host_increment_switchless_args_t;

typedef struct _host_increment_regular_args_t
{
    oe_result_t _result;
    int* m;
} host_increment_regular_args_t;

/**** Trusted function IDs ****/
enum
{
    switchless_fcn_id_enclave_add_N_switchless = 0,
    switchless_fcn_id_enclave_add_N_regular = 1,
    switchless_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{
    switchless_fcn_id_host_increment_switchless = 0,
    switchless_fcn_id_host_increment_regular = 1,
    switchless_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_SWITCHLESS_ARGS_H

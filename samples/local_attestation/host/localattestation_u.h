/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_LOCALATTESTATION_U_H
#define EDGER8R_LOCALATTESTATION_U_H

#include <openenclave/host.h>

#include "localattestation_args.h"

OE_EXTERNC_BEGIN

oe_result_t oe_create_localattestation_enclave(
    const char* path,
    oe_enclave_type_t type,
    uint32_t flags,
    const oe_enclave_setting_t* settings,
    uint32_t setting_count,
    oe_enclave_t** enclave);

/**** ECALL prototypes. ****/
oe_result_t get_target_info(
    oe_enclave_t* enclave,
    int* _retval,
    uint8_t** target_info_buffer,
    size_t* target_info_size);

oe_result_t get_targeted_report_with_pubkey(
    oe_enclave_t* enclave,
    int* _retval,
    uint8_t* target_info_buffer,
    size_t target_info_size,
    uint8_t** pem_key,
    size_t* pem_key_size,
    uint8_t** report,
    size_t* report_size);

oe_result_t verify_report_and_set_pubkey(
    oe_enclave_t* enclave,
    int* _retval,
    uint8_t* pem_key,
    size_t key_size,
    uint8_t* report,
    size_t report_size);

oe_result_t generate_encrypted_message(
    oe_enclave_t* enclave,
    int* _retval,
    uint8_t** data,
    size_t* size);

oe_result_t process_encrypted_msg(
    oe_enclave_t* enclave,
    int* _retval,
    uint8_t* data,
    size_t size);

/**** OCALL prototypes. ****/
/* There were no ocalls. */

OE_EXTERNC_END

#endif // EDGER8R_LOCALATTESTATION_U_H
